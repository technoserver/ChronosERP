grupos

mensagem ao abri o cadastro de grupos



definir a senha padrao do usuario


definir credito do icms

criar os relacionamento da empresa produto

colocar o crt da empresa na populacao dos dados

cria campo valorTotalTributos em nfecabecalho


CREATE OR REPLACE VIEW public.view_sped_c190 AS
 SELECT nfec.id,
    nfed.cst_icms,
    nfed.cfop,
    nfed.aliquota_icms,
    nfec.data_hora_emissao,
    sum(nfed.valor_total) AS soma_valor_operacao,
    sum(nfed.base_calculo_icms) AS soma_base_calculo_icms,
    sum(nfed.valor_icms) AS soma_valor_icms,
    sum(nfed.valor_base_calculo_icms_st) AS soma_base_calculo_icms_st,
    sum(nfed.valor_icms_st) AS soma_valor_icms_st,
    sum(nfed.valor_outras_despesas) AS soma_vl_red_bc,
    COALESCE(sum(nfed.valor_ipi),0) AS soma_valor_ipi
   FROM view_sped_nfe_detalhe nfed
     JOIN nfe_cabecalho nfec ON nfed.id_nfe_cabecalho = nfec.id
  GROUP BY nfec.id, nfed.cst_icms, nfed.cfop, nfed.aliquota_icms, nfec.data_hora_emissao;


  CREATE TABLE fiscal_apuracao_icms
  (
    id serial NOT NULL,
    id_empresa integer NOT NULL,
    competencia character varying(7),
    valor_total_debito numeric(18,6),
    valor_ajuste_debito numeric(18,6),
    valor_total_ajuste_debito numeric(18,6),
    valor_estorno_credito numeric(18,6),
    valor_total_credito numeric(18,6),
    valor_ajuste_credito numeric(18,6),
    valor_total_ajuste_credito numeric(18,6),
    valor_estorno_debito numeric(18,6),
    valor_saldo_credor_anterior numeric(18,6),
    valor_saldo_apurado numeric(18,6),
    valor_total_deducao numeric(18,6),
    valor_icms_recolher numeric(18,6),
    valor_saldo_credor_transp numeric(18,6),
    valor_debito_especial numeric(18,6),
    CONSTRAINT fiscal_apuracao_icms_pkey PRIMARY KEY (id),
    CONSTRAINT fiscal_apuracao_icms_id_empresa_fkey FOREIGN KEY (id_empresa)
        REFERENCES public.empresa (id) MATCH SIMPLE
        ON UPDATE NO ACTION ON DELETE NO ACTION
  );




  CREATE OR REPLACE VIEW view_fin_lancamento_receber AS
   SELECT
      lr.id AS id,
      c.id AS id_cliente,
      p.nome,
      pf.cpf AS cpf_cnpj,
      lr.data_lancamento,
      lr.valor_a_receber AS valor_lancamento,
      lr.quantidade_parcela,
      lr.numero_documento,
      pr.numero_parcela,
      pr.data_vencimento,
      pr.valor AS valor_parcela,
      pr.taxa_juro,
      pr.valor_juro,
      pr.taxa_multa,
      pr.valor_multa,
      pr.taxa_desconto,
      pr.valor_desconto,
      (SELECT COALESCE(sum(fin_parcela_recebimento.valor_recebido), 0::numeric) FROM fin_parcela_recebimento WHERE fin_parcela_recebimento.id_fin_parcela_receber = pr.id) AS valor_recebido,
      (SELECT COALESCE(sum(fin_parcela_recebimento.valor_juro), 0::numeric) FROM fin_parcela_recebimento WHERE fin_parcela_recebimento.id_fin_parcela_receber = pr.id) AS juros_recebido,
      (SELECT COALESCE(sum(fin_parcela_recebimento.valor_multa), 0::numeric) FROM fin_parcela_recebimento WHERE fin_parcela_recebimento.id_fin_parcela_receber = pr.id) AS multa_recebido,
      s.id AS id_status_parcela,
      s.situacao AS situacao_parcela,
      s.descricao AS descricao_situacao_parcela,
      cc.id AS id_conta_caixa,
      cc.nome AS nome_conta_caixa,
      cc.limite_cobranca_juro,
      pr.id AS id_parcela_receber,
      doc.sigla_documento
   FROM fin_lancamento_receber lr
       INNER JOIN fin_parcela_receber pr ON (pr.id_fin_lancamento_receber = lr.id)
       INNER JOIN fin_status_parcela s ON(pr.id_fin_status_parcela = s.id)
       INNER JOIN conta_caixa cc ON (pr.id_conta_caixa = cc.id)
       INNER JOIN fin_documento_origem doc on(lr.id_fin_documento_origem = doc.id)
       INNER JOIN cliente c ON (lr.id_cliente = c.id)
       INNER JOIN pessoa p ON(c.id_pessoa = p.id)
       INNER JOIN pessoa_fisica pf ON (pf.id_pessoa = p.id)

  UNION
   SELECT
      lr.id AS id,
      c.id AS id_cliente,
      p.nome,
      pj.cnpj AS cpf_cnpj,
      lr.data_lancamento,
      lr.valor_a_receber AS valor_lancamento,
      lr.quantidade_parcela,
      lr.numero_documento,
      pr.numero_parcela,
      pr.data_vencimento,
      pr.valor AS valor_parcela,
      pr.taxa_juro,
      pr.valor_juro,
      pr.taxa_multa,
      pr.valor_multa,
      pr.taxa_desconto,
      pr.valor_desconto,
      (SELECT COALESCE(sum(fin_parcela_recebimento.valor_recebido), 0::numeric) FROM fin_parcela_recebimento WHERE fin_parcela_recebimento.id_fin_parcela_receber = pr.id) AS valor_recebido,
      (SELECT COALESCE(sum(fin_parcela_recebimento.valor_juro), 0::numeric) FROM fin_parcela_recebimento WHERE fin_parcela_recebimento.id_fin_parcela_receber = pr.id) AS juros_recebido,
      (SELECT COALESCE(sum(fin_parcela_recebimento.valor_multa), 0::numeric) FROM fin_parcela_recebimento WHERE fin_parcela_recebimento.id_fin_parcela_receber = pr.id) AS multa_recebido,
      s.id AS id_status_parcela,
      s.situacao AS situacao_parcela,
      s.descricao AS descricao_situacao_parcela,
      cc.id AS id_conta_caixa,
      cc.nome AS nome_conta_caixa,
      cc.limite_cobranca_juro,
      pr.id AS id_parcela_receber,
      doc.sigla_documento

     FROM fin_lancamento_receber lr
       INNER JOIN fin_parcela_receber pr ON (pr.id_fin_lancamento_receber = lr.id)
       INNER JOIN fin_status_parcela s ON(pr.id_fin_status_parcela = s.id)
       INNER JOIN conta_caixa cc ON (pr.id_conta_caixa = cc.id)
       INNER JOIN fin_documento_origem doc on(lr.id_fin_documento_origem = doc.id)
       INNER JOIN cliente c ON (lr.id_cliente = c.id)
       INNER JOIN pessoa p ON(c.id_pessoa = p.id)
       INNER JOIN pessoa_juridica pj ON (pj.id_pessoa = p.id );


nfe xml