<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
                 version="2.1">

    <named-native-query name="Produto.venda" result-set-mapping="produtoDTOMapping">
        <query>
            select distinct
            p.id,
            p.nome,
            p.descricao_pdv,
            p.servico,
            p.codigo_lst,
            p.valor_venda,
            e.quantidade_estoque,
            estoque_verificado,
            p.ncm,
            p.imagem,
            p.id_grupo_tributario,
            u.sigla,
            u.pode_fracionar,
            pm.valor,
            tp.preco,
            p.preco_prioritario,
            p.quantidade_venda_atacado,
            p.valor_venda_atacado,
            tp.preco
            from produto p
            inner join empresa_produto e on (e.id_produto=p.ID)
            inner join UNIDADE_PRODUTO u on (p.ID_UNIDADE_PRODUTO=u.ID)
            left join produto_promocao pm on (pm.id_produto=p.ID)
            left join TABELA_PRECO_PRODUTO tp on (tp.ID_PRODUTO=p.ID)
            left join TABELA_PRECO t on (t.id = tp.id_tabela_preco)
            where (p.nome like '%BISC%' or p.GTIN='bisc' or p.CODIGO_INTERNO='bisc') and p.ID_GRUPO_TRIBUTARIO is not
            null and p.TIPO='V'
        </query>
    </named-native-query>

    <named-native-query name="Usuario.login" result-set-mapping="loginUsuarioDTOMapping">
        <query>
            select
            u.id,
            e.id as idempresa,
            c.id as idcolaborador,
            p.id as idpessoa,
            u.login,
            u.senha,
            p.nome,
            c.foto_34 as foto,
            u.administrador,
            cg.nome as cargo,
            e.razao_social,
            pp.id as idpapel,
            pp.acesso_completo,
            o.id as idoperador,
            o.login as operador,
            o.nivel_autorizacao
            from usuario u
            inner join colaborador c on c.id = u.id_colaborador
            inner join cargo cg on cg.id = c.id_cargo
            inner join pessoa p on p.id = c.id_pessoa
            inner join papel pp on pp.id = u.id_papel
            inner join empresa_pessoa ep on ep.id_pessoa = p.id
            inner join empresa e on e.id = ep.id_empresa
            left join pdv_operador o on o.id_colaborador = c.id
            where u.login = :login limit 1
        </query>

    </named-native-query>

    <named-native-query name="Nfe.configuracao" result-set-mapping="configuracaoNfeMapping">
        <query>
            select
            c.caminho,
            c.senha,
            n.caminho_logomarca,
            n.caminho_schemas,
            n.webservice_uf,
            n.webservice_ambiente,
            n.observacao_padrao
            from certificado_configuracao c, nfe_configuracao n
            where c.id_empresa = ?1
        </query>

    </named-native-query>

    <named-native-query name="Mdfe.configuracao" result-set-mapping="configuracaoMdfeMapping">
        <query>
            select
            c.caminho,
            c.senha,
            m.caminho_logomarca,
            m.caminho_schemas,
            m.webservice_uf,
            m.webservice_ambiente,
            m.observacao_padrao,
            m.rntrc
            from certificado_configuracao c, mdfe_configuracao m
            where c.id_empresa = ?1 and m.id_empresa = ?1
        </query>

    </named-native-query>


    <named-native-query name="Pdv.configuracao" result-set-mapping="configuracaoPdvMapping">
        <query>
            select
            c.caminho,
            c.senha,
            n.caminho_logomarca,
            n.caminho_schemas,
            n.webservice_uf,
            n.webservice_ambiente,
            n.codigo_csc,
            n.id_token_csc,
            cx.codigo as serie,
            n.mensagem_cupom,
            n.observacao_padrao
            from certificado_configuracao c, pdv_configuracao n
            inner join pdv_caixa cx on cx.id = n.id_pdv_caixa
            where cx.web = 'S' and c.id_empresa = ?1
        </query>

    </named-native-query>


    <named-native-query name="Pdv.movimento" result-set-mapping="movimentoPdvMapping">
        <query>
            SELECT
            concat(m.id , s.id , 1) AS id,
            o.login as operador,
            m.id AS idmovimento,
            s.id AS idorigem,
            s.data_sangria AS data_hora,
            'Saída - Sangria' AS descricao,
            s.valor,
            '01' AS codigo_forma_pagamento,
            'Dinheiro' AS forma_pagamento,
            'S' AS tipo,
            'Sangria' AS origem,
            s.observacao
            FROM pdv_movimento m
            JOIN pdv_sangria s ON s.id_pdv_movimento = m.id
            JOIN pdv_operador o ON o.id = m.id_pdv_operador
            WHERE (m.id = ?1) and data_abertura BETWEEN ?2 and ?3
            UNION
            SELECT
            concat(m.id , s.id , 2) AS id,
            o.login as operador,
            m.id AS idmovimento,
            s.id AS idorigem,
            s.data_suprimento AS data_hora,
            'Entrada - Acrécimo' AS descricao,
            s.valor,
            '01' AS codigo_forma_pagamento,
            'Dinheiro' AS forma_pagamento,
            'E' AS tipo,
            'Suprimentos' AS origem,
            s.observacao
            FROM pdv_movimento m
            JOIN pdv_suprimento s ON s.id_pdv_movimento = m.id
            JOIN pdv_operador o ON o.id = m.id_pdv_operador
            WHERE (m.id = ?1) and data_abertura BETWEEN ?2 and ?3

            UNION

            SELECT
            concat(m.id , f.id , 3) AS id,
            o.login as operador,
            m.id AS idmovimento,
            v.id AS idorigem,
            v.data_hora_venda AS data_hora,
            ('Venda n°' || v.id) || '(PDV)' AS descricao,
            f.valor-f.troco,
            t.codigo AS codigo_forma_pagamento,
            t.descricao AS forma_pagamento,
            'E' AS tipo,
            'VENDA' AS origem,
            '' AS observacao
            FROM pdv_movimento m
            JOIN pdv_venda_cabecalho v ON v.id_pdv_movimento = m.id
            JOIN pdv_forma_pagamento f ON f.id_pdv_venda_cabecalho = v.id
            JOIN pdv_tipo_pagamento t ON f.id_pdv_tipo_pagamento = t.id
            JOIN pdv_operador o ON o.id = m.id_pdv_operador
            WHERE (m.id = ?1) and data_abertura BETWEEN ?2 and ?3 and (v.status_venda = 'E' or v.status_venda = 'F')

            union

            select
            concat(m.id , r.id , 4) AS id,
            o.login as operador,
            m.id AS idmovimento,
            r.id AS idorigem,
            r.data_recebimento AS data_hora,
            ('Recebimento n°' || r.id) || ' de '|| ps.nome AS descricao,
            r.valor_recebido,
            '01' AS codigo_forma_pagamento,
            'Dinheiro' AS forma_pagamento,
            'E' AS tipo,
            'RECEBIMENTO' AS origem,
            '' AS observacao
            from pdv_movimento m
            inner join pdv_operador o ON o.id = m.id_pdv_operador
            inner join fin_parcela_recebimento r on r.id_pdv_movimento = m.id
            inner join fin_parcela_receber p on p.id = r.id_fin_parcela_receber
            inner join fin_lancamento_receber l on l.id = p.id_fin_lancamento_receber
            inner join cliente c on c.id = l.id_cliente
            inner join pessoa ps on ps.id = c.id_pessoa
            where m.id = ?1

            ORDER BY 5,8;
        </query>

    </named-native-query>


    <sql-result-set-mapping name="produtoDTOMapping">
        <constructor-result target-class="com.chronos.dto.ProdutoDTO">
            <column name="id" class="java.lang.Integer"/>
            <column name="nome" class="java.lang.String"/>
            <column name="descricao_pdv" class="java.lang.String"/>
            <column name="servico" class="java.lang.String"/>
            <column name="codigo_lst" class="java.lang.String"/>
            <column name="valor_venda" class="java.math.BigDecimal"/>
            <column name="quantidade_estoque" class="java.lang.Integer"/>
            <column name="estoque_verificado" class="java.lang.Integer"/>
            <column name="ncm" class="java.lang.String"/>
            <column name="imagem" class="java.lang.String"/>
            <column name="id_grupo_tributario" class="java.lang.Integer"/>
            <column name="sigla" class="java.lang.String"/>
            <column name="pode_fracionar" class="java.lang.String"/>
            <column name="valor" class="java.math.BigDecimal"/>
            <column name="preco" class="java.math.BigDecimal"/>
            <column name="preco_prioritario" class="java.math.BigDecimal"/>
            <column name="quantidade_venda_atacado" class="java.math.BigDecimal"/>
            <column name="valor_venda_atacado" class="java.math.BigDecimal"/>
            <column name="preco" class="java.math.BigDecimal"/>
        </constructor-result>
    </sql-result-set-mapping>


    <sql-result-set-mapping name="loginUsuarioDTOMapping">
        <constructor-result target-class="com.chronos.dto.UsuarioDTO">
            <column name="id" class="java.lang.Integer"/>
            <column name="idempresa" class="java.lang.Integer"/>
            <column name="idcolaborador" class="java.lang.Integer"/>
            <column name="idpessoa" class="java.lang.Integer"/>
            <column name="login" class="java.lang.String"/>
            <column name="senha" class="java.lang.String"/>
            <column name="nome" class="java.lang.String"/>
            <column name="foto" class="java.lang.String"/>
            <column name="administrador" class="java.lang.String"/>
            <column name="cargo" class="java.lang.String"/>
            <column name="razao_social" class="java.lang.String"/>
            <column name="idpapel" class="java.lang.Integer"/>
            <column name="acesso_completo" class="java.lang.String"/>
            <column name="idoperador" class="java.lang.Integer"/>
            <column name="operador" class="java.lang.String"/>
            <column name="nivel_autorizacao" class="java.lang.String"/>
        </constructor-result>
    </sql-result-set-mapping>


    <sql-result-set-mapping name="configuracaoNfeMapping">
        <constructor-result target-class="com.chronos.dto.ConfiguracaoNfeDTO">
            <column name="caminho" class="java.lang.String"/>
            <column name="senha" class="java.lang.String"/>
            <column name="caminho_logomarca" class="java.lang.String"/>
            <column name="caminho_schemas" class="java.lang.String"/>
            <column name="webservice_uf" class="java.lang.String"/>
            <column name="webservice_ambiente" class="java.lang.Integer"/>
            <column name="observacao_padrao" class="java.lang.String"/>
        </constructor-result>
    </sql-result-set-mapping>

    <sql-result-set-mapping name="configuracaoMdfeMapping">
        <constructor-result target-class="com.chronos.dto.ConfiguracaoMdfeDTO">
            <column name="caminho" class="java.lang.String"/>
            <column name="senha" class="java.lang.String"/>
            <column name="caminho_logomarca" class="java.lang.String"/>
            <column name="caminho_schemas" class="java.lang.String"/>
            <column name="webservice_uf" class="java.lang.String"/>
            <column name="webservice_ambiente" class="java.lang.Integer"/>
            <column name="observacao_padrao" class="java.lang.String"/>
            <column name="rntrc" class="java.lang.String"/>
        </constructor-result>
    </sql-result-set-mapping>

    <sql-result-set-mapping name="configuracaoPdvMapping">
        <constructor-result target-class="com.chronos.dto.ConfiguracaoPdvDTO">
            <column name="caminho" class="java.lang.String"/>
            <column name="senha" class="java.lang.String"/>
            <column name="caminho_logomarca" class="java.lang.String"/>
            <column name="caminho_schemas" class="java.lang.String"/>
            <column name="webservice_uf" class="java.lang.String"/>
            <column name="webservice_ambiente" class="java.lang.Integer"/>
            <column name="codigo_csc" class="java.lang.String"/>
            <column name="id_token_csc" class="java.lang.String"/>
            <column name="serie" class="java.lang.String"/>
            <column name="mensagem_cupom" class="java.lang.String"/>
            <column name="observacao_padrao" class="java.lang.String"/>
        </constructor-result>
    </sql-result-set-mapping>

    <sql-result-set-mapping name="movimentoPdvMapping">
        <constructor-result target-class="com.chronos.dto.PdvMovimentoDTO">
            <column name="id" class="java.lang.Integer"/>
            <column name="operador" class="java.lang.String"/>
            <column name="idmovimento" class="java.lang.Integer"/>
            <column name="idorigem" class="java.lang.Integer"/>
            <column name="data_hora" class="java.util.Date"/>
            <column name="descricao" class="java.lang.String"/>
            <column name="valor" class="java.math.BigDecimal"/>
            <column name="codigo_forma_pagamento" class="java.lang.String"/>
            <column name="forma_pagamento" class="java.lang.String"/>
            <column name="tipo" class="java.lang.String"/>
            <column name="origem" class="java.lang.String"/>
            <column name="observacao" class="java.lang.String"/>
        </constructor-result>
    </sql-result-set-mapping>

</entity-mappings>